name: Auto Tag + Release

on:
  workflow_call: {}

permissions:
  contents: write
  id-token: write

env:
  REGISTRY_PREFIX: us-central1-docker.pkg.dev/lytic-brew-mira-development/containers

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Auto-tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Auth to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: access_token

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: ${{ env.REGISTRY_PREFIX }}/${{ github.event.repository.name }}
        run: |
          IMAGE_URL="$IMAGE_NAME:${{ steps.tagging.outputs.new_tag }}"
          echo "Building image: $IMAGE_URL"
          docker build -t $IMAGE_URL .
          echo "Pushing image: $IMAGE_URL"
          docker push $IMAGE_URL
          echo "âœ… Image pushed successfully: $IMAGE_URL"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagging.outputs.new_tag }}
          release_name: Release ${{ steps.tagging.outputs.new_tag }}
          body: |
            ## ðŸš€ Ready to Deploy
            
            **Docker Image:**
            ```
            us-central1-docker.pkg.dev/lytic-brew-mira-development/containers/journal-backend:${{ steps.tagging.outputs.new_tag }}
            ```
            
            **To deploy manually:**
            1. Go to Actions tab
            2. Run "Deploy to Cloud Run" workflow
            3. Enter tag: `${{ steps.tagging.outputs.new_tag }}`
            
            ## Changes
            ${{ steps.tagging.outputs.changelog }}
          draft: false
          prerelease: false